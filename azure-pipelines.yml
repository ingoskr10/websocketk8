trigger:
  - main

variables:
  projectId: 'your-gcp-project'
  clusterName: 'your-gke-cluster'
  location: 'your-cluster-location'
  registryName: 'gcr.io/$(projectId)'
  imageName: 'realtime-service'
  imageTag: '$(Build.BuildId)'

pool:
  vmImage: 'ubuntu-latest'

stages:
- stage: Build
  jobs:
  - job: BuildAndTest
    steps:
    - task: NodeTool@0
      inputs:
        versionSpec: '18.x'
    
    - script: |
        npm ci
        npm run lint
        npm test
      displayName: 'Install dependencies and run tests'
    
    - script: |
        npm run build
      displayName: 'Build TypeScript'

    - task: Docker@2
      inputs:
        command: build
        repository: $(registryName)/$(imageName)
        tags: |
          $(imageTag)
          latest
        dockerfile: Dockerfile
      displayName: 'Build Docker image'

    - task: Docker@2
      inputs:
        command: push
        repository: $(registryName)/$(imageName)
        tags: |
          $(imageTag)
          latest
      displayName: 'Push Docker image'

- stage: Deploy
  dependsOn: Build
  condition: succeeded()
  jobs:
  - deployment: DeployToGKE
    environment: 'production'
    strategy:
      runOnce:
        deploy:
          steps:
          - task: GoogleCloudSDK@0
            inputs:
              version: 'latest'
              projectId: $(projectId)
              authenticationType: 'serviceAccount'
              credentialsJSON: $(GOOGLE_CLOUD_CREDENTIALS)
          
          - script: |
              gcloud container clusters get-credentials $(clusterName) --zone $(location) --project $(projectId)
              kubectl apply -f kubernetes/
            displayName: 'Deploy to GKE'